{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.13.1.58284",
      "templateHash": "17567019607531788589"
    }
  },
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "localadmin",
      "metadata": {
        "description": "The name of the administrator account of the new VM and domain"
      }
    },
    "adUsername": {
      "type": "string",
      "defaultValue": "testu1",
      "metadata": {
        "description": "The name of a test AD account"
      }
    },
    "commonUserPassword": {
      "type": "secureString",
      "metadata": {
        "description": "The password for the administrator account of the new VM and domain"
      }
    },
    "adPrivateIPAddress": {
      "type": "string",
      "defaultValue": "10.0.0.4",
      "metadata": {
        "description": "Private IP address."
      }
    },
    "adPublicIPAddressName": {
      "type": "string",
      "defaultValue": "adPublicIP",
      "metadata": {
        "description": "Subnet IP range."
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the Active Directory Domain to be created"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "subnet-default-nsg",
      "metadata": {
        "description": "Network Security Group Name For Subnet"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "adSubnet",
      "metadata": {
        "description": "Subnet name."
      }
    },
    "subnetRange": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Subnet IP range."
      }
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Virtual network address range."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "adVNET",
      "metadata": {
        "description": "Virtual network name."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of the VM for the controller"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "[deployment().properties.templateLink.uri]",
      "metadata": {
        "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "secureString",
      "defaultValue": "",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
      }
    }
  },
  // "variables":{
  //   "location": "[resourceGroup().location]"
  // },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-07-01",
      "name": "[parameters('adPublicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "adds-ad-blog"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-07-01",
      "name": "adNic",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "adipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('adPrivateIPAddress')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('adPublicIPAddressName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": ["[resourceId('Microsoft.Resources/deployments', 'VNet')]"]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-08-01",
      "name": "adVM",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "adVM",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('commonUserPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2019-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "adVM_OSDisk",
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
            {
              "name": "adVM_DataDisk",
              "caching": "ReadWrite",
              "createOption": "Empty",
              "diskSizeGB": 20,
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              },
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'adNic')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'adNic')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-08-01",
      "name": "adVM/CreateADForest",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.19",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[uri(parameters('_artifactsLocation'), format('DSC/CreateADPDC.zip{0}', parameters('_artifactsLocationSasToken')))]",
          "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
          "Properties": {
            "DomainName": "[parameters('domainName')]",
            "AdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PrivateSettingsRef:AdminPassword"
            }
          }
        },
        "protectedSettings": {
          "Items": {
            "AdminPassword": "[parameters('commonUserPassword')]"
          }
        }
      },
      "dependsOn": ["[resourceId('Microsoft.Compute/virtualMachines', 'adVM')]"]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "UpdateVNetDNS",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "subnetRange": {
            "value": "[parameters('subnetRange')]"
          },
          "DNSServerAddress": {
            "value": ["[parameters('adPrivateIPAddress')]"]
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "12019049826642862479"
            }
          },
          "parameters": {
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Virtual Network to Create"
              }
            },
            "virtualNetworkAddressRange": {
              "type": "string",
              "metadata": {
                "description": "The address range of the new VNET in CIDR format"
              }
            },
            "subnetName": {
              "type": "string",
              "metadata": {
                "description": "The name of the subnet created in the new VNET"
              }
            },
            "subnetRange": {
              "type": "string",
              "metadata": {
                "description": "The address range of the subnet created in the new VNET"
              }
            },
            "DNSServerAddress": {
              "type": "array",
              "metadata": {
                "description": "The DNS address(es) of the DNS Server(s) used by the VNET"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-07-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetworkAddressRange')]"
                  ]
                },
                "dhcpOptions": {
                  "dnsServers": "[parameters('DNSServerAddress')]"
                },
                "subnets": [
                  {
                    "name": "[parameters('subnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnetRange')]"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', 'adVM', 'CreateADForest')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "VNet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "subnetRange": {
            "value": "[parameters('subnetRange')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "networkSecurityGroupName": {
            "value": "[parameters('networkSecurityGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "7676624414886455368"
            }
          },
          "parameters": {
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Virtual Network to Create"
              }
            },
            "virtualNetworkAddressRange": {
              "type": "string",
              "metadata": {
                "description": "The address range of the new VNET in CIDR format"
              }
            },
            "subnetName": {
              "type": "string",
              "metadata": {
                "description": "The name of the subnet created in the new VNET"
              }
            },
            "subnetRange": {
              "type": "string",
              "metadata": {
                "description": "The address range of the subnet created in the new VNET"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "networkSecurityGroupName": {
              "type": "string",
              "metadata": {
                "description": "Network Security Group Name For Subnet"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[parameters('networkSecurityGroupName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "default-allow-3389",
                    "properties": {
                      "priority": 1000,
                      "access": "Allow",
                      "direction": "Inbound",
                      "destinationPortRange": "3389",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-07-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetworkAddressRange')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('subnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnetRange')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
              ]
            }
          ]
        }
      }
    },

    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-08-01",
      "name": "ws1",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "ws1",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('commonUserPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2019-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "ws1_OSDisk",
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
            {
              "name": "ws1_DataDisk",
              "caching": "ReadWrite",
              "createOption": "Empty",
              "diskSizeGB": 20,
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              },
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'ws1NIC')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'adNic')]"
      ]
    },

    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-08-01",
      "name": "ws1AddToAd",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.7",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[uri(parameters('_artifactsLocation'), format('bootstrap/add-to-adds.ps1{0}', parameters('_artifactsLocationSasToken')))]"
          ],
          "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File add-to-adds.ps1 -domainName ',parameters('domainName'),' -adUser ',parameters('adUsername'),' -adUserPass ',parameters('commonUserPassword'),'"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', 'adVM', 'CreateADForest')]"
      ]
    },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-07-01",
      "name": "ws1NIC",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ws1ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.1.0",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'ws1PublicIP')]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": ["[resourceId('Microsoft.Resources/deployments', 'VNet')]"]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-07-01",
      "name": "ws1PublicIP",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "ws1-ad-blog"
        }
      }
    }
  ]
}
